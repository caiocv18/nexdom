# ================================
# CONFIGURAÇÕES APACHE KAFKA
# ================================

# Configurações básicas do Kafka - Corrigido para funcionar tanto local quanto Docker
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=nexdom-inventory-group

# Configurações do Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=1

# Configurações do Consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.spring.json.trusted.packages=br.com.nexdom.desafio.backend.dto

# Configurações específicas dos tópicos
kafka.topics.movimento-estoque=nexdom.movimento.estoque
kafka.topics.produto-events=nexdom.produto.events
kafka.topics.alertas-estoque=nexdom.alertas.estoque
kafka.topics.relatorios-events=nexdom.relatorios.events
kafka.topics.auditoria=nexdom.auditoria

# Habilitar/Desabilitar Kafka
kafka.enabled=${KAFKA_ENABLED:true}

# Configurações de processamento
kafka.consumer.concurrency=3
kafka.consumer.poll-timeout=3000

# ================================
# CONFIGURAÇÕES DE INTEGRAÇÃO
# ================================

# Processamento assíncrono (pode usar Kafka em vez de SQS)
processamento.assincrono.provider=kafka
# Opções: kafka, sqs, both

# Configurações de alertas
alertas.estoque.quantidade-minima=10
alertas.estoque.quantidade-critica=5
alertas.estoque.notificacao.email.enabled=true
alertas.estoque.notificacao.sms.enabled=false

# Configurações de auditoria
auditoria.kafka.enabled=true
auditoria.operacoes-suspeitas.enabled=true

# Configurações de analytics
analytics.tempo-real.enabled=true
analytics.dashboard.websocket.enabled=true

# ================================
# CONFIGURAÇÕES DE MONITORAMENTO
# ================================

# Métricas do Kafka
management.endpoints.web.exposure.include=health,info,metrics,kafka
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true

# Logs específicos do Kafka
logging.level.org.apache.kafka=INFO
logging.level.org.springframework.kafka=INFO
logging.level.br.com.nexdom.desafio.backend.service.KafkaProducerService=DEBUG
logging.level.br.com.nexdom.desafio.backend.service.KafkaConsumerService=DEBUG

# ================================
# CONFIGURAÇÕES DE FALLBACK
# ================================

# Configuração para quando Kafka não está disponível
kafka.fallback.enabled=true
kafka.connection.timeout=5000
kafka.retry.attempts=3
kafka.retry.delay=2000 